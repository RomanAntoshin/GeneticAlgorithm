В данной работе реализован эволюционно-генетический алгоритм для решения задачи коммивояжера. Краткий обзор по важным частям программы:
1) Абстрактный класс Algorithm, содержащий в себе абстрактный метод GiveSolution, возвращающий объект класса Person - особи в генетическом алгоритме.
  1.1) Класс WoodenAlgorithm, реализующий метод минимального остовного дерева.
      1.1.1) Класс Edge – представляет ребро графа. Хранит инцидентные ему вершины, а также вес ребра.
  1.2) Класс NearestNeighborAlgorithm, реализующий метод ближайшего соседа
  1.3) Класс NearestCityAlgorithm, реализующий метод ближайшего города.
2) Статический класс Reader, обеспечивающий считывание и необходимую корректировку данных.
3) Класс Person, хранящий перестановочную кодировку решения и значение критерия.
4) Статический класс Mutation, реализующий три варианта мутации и механизм их выбора
5) Интефейс IBriding абстрактный класс ABriding, реализованные в классах Briding_OX, Briding_CX, Briding_PMX, каждый из которых реализует один из вариантов кроссовера.
6) Абстрактный класс AStrategy, от которого наследует различные классы, реализующие различные стратегии объединения особей в пары для скрещивания, а также содержащий
реализацию стратегии селекции (бетта-турнир)
  6.1) Класс Panmixia, реализующий стратегию случайного выбора пар
  6.2) Классы Inbriding/Outbriding, реализующие стратегии, при которых особи объединяются в пары, исходя из близости их кодировок
      6.2.1) Класс Levenshtein содержит функцию для определения расстояния Левенштейна между двумя кодировками (генотипами)
  6.3) Классы Positive и Negative, реализующие стратегии, при которых особи объединяются в пары, исходя из их фенотипа (значения критерия)
В классе Program содержится метод, создающий начальное поколение, задается число тактов работы алгоритма, выбираются кроссовер и стратегия скрещивания. 
